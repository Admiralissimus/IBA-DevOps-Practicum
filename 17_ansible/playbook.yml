---
- name: Create EC2 with docker engine, run docker container and remove EC2 at the end
  hosts: localhost

  vars:
    ec2_image: ami-053b0d53c279acc90 # Ubuntu 22.04 LTS
    ec2_user: ubuntu
    ec2_key_pub: devops1
    ec2_key_priv: devops1.pem
    instance_type: t2.micro
    user_data: |
      #!/bin/bash
      apt-get update -y
      apt-get install -y docker.io
      usermod -aG docker ubuntu

  tasks:

    - name: Create EC2
      amazon.aws.ec2_instance:
        name: "{{ ec2_name }}"
        key_name: "{{ ec2_key_pub }}"
        instance_type: "{{ instance_type }}"
        security_group: default
        network:
          assign_public_ip: true
        image_id: "{{ ec2_image }}"
        tags:
          Owner: Ushakou
        state: started
        wait: true
        wait_timeout: 120
        user_data: "{{ user_data }}"
      register: ec2

    - name: Show external IP
      ansible.builtin.debug:
        var: ec2.instances[0].public_ip_address

    - name: Add EC2 instance to docker_hosts group
      ansible.builtin.add_host:
        name: "{{ ec2.instances[0].instance_id }}"
        groups: ec2_docker
        ansible_host: "{{ ec2.instances[0].public_ip_address }}"
        ansible_user: "{{ ec2_user }}"
        ansible_ssh_private_key_file: "{{ ec2_key_priv }}"

- name: Run nginx container in EC2
  hosts: ec2_docker
  tasks:

    - name: Run Nginx container
      community.docker.docker_container:
        name: nginx_container
        image: "{{ docker_image }}"
        state: started
        ports:
          - "80:80"

- name: Check working container and terminate EC2 at the end
  hosts: localhost
  tasks:

    - name: Check that nginx works
      ansible.builtin.uri:
        url: "http://{{ ec2.instances[0].public_ip_address }}"
        return_content: true
      register: http_output

    - name: Show opened html-page
      ansible.builtin.debug:
        var: http_output.content

    - name: Terminate EC2
      amazon.aws.ec2_instance:
        name: "{{ ec2_name }}"
        state: terminated
